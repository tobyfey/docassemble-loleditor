---
if: defined('x.type_of_clone')
generic object: IssueObject
question: ${ x.name }
subquestion: |
  
  ${ x.type_of_clone }: ${ x.name_of_clone }

	Definition:  ${ x.definition }
	
	Cloned Definition: ${ x.parent.definition }
	
	Question:  ${ x.question }
	
	Cloned Question:  ${ x.parent.question }
	
	Explanation:  ${ x.explanation }
	
	Cloned Explanation:  ${ x.parent.explanation }
	
	How:  ${ x.HOW }
	
	Cloned How:  ${ x.parent.HOW }
	
	Why:  ${ x.why }
	
	Cloned Why:  ${ x.parent.why }
	
	Warning:  ${ x.warning }
	
	Cloned Warning:  ${ x.parent.warning }
	
	Active:  ${ x.active }
	
	Most Common:  ${ x.most_common }
	
fields:
  - What do you want to do?: x.review_choice
    code: |
      x.review_choice_code
  - note: |
      % if len(x.clones['TypeOfHousing'].name_list) > 0:
      Type of Housing Clones:
      % for toh in x.clones['TypeOfHousing'].name_list:
   
      - ${ toh }
   
      % endfor
      % elif len(x.cloned['TypeOfHousing']) > 0:
      Type of Housing Cloned:
      % for toh in x.cloned['TypeOfHousing']:
   
      - ${ toh }
   
      % endfor
      
      % else:
      Type of Housing Cloned: None.
   
      % endif
    hide if: 
      variable: x.review_choice
      is: housing_clone
  - Go To Type of Housing Clone: x.housing_a_id
    datatype: radio
    code: x.clones['TypeOfHousing'].question_code
    show if:
    	variable: x.review_choice
    	is: housing_clone
  - note: |
      Subsets:
      % if len(x.objectlinks['subsets']) > 0:
      
      % for toh in x.objectlinks['subsets']:
      - **${ toh.name }**
      % if hasattr(toh,'definition'):
      
      ${ toh.definition }
      
      % endif
      % endfor
      % else:
      None.
   
      % endif
    hide if: 
      variable: x.review_choice
      is: subset
  - Go To Subset: x.subset_a_id
    datatype: radio
    code: x.objectlinks['subsets'].question_code
    show if:
      variable: x.review_choice
      is: subset
  - note: |
      Stage Clones:
      % if len(x.clones['Stage'].name_list) > 0:
      % for toh in x.clones['Stage'].name_list:
   
      - ${ toh }
   
      % endfor
      % else:
      None.
   
      % endif
    hide if: 
      variable: x.review_choice
      is: stage_clone
  - Go To Stage Clone: x.stage_a_id
    datatype: radio
    code: x.clones['Stage'].question_code
    show if:
    	variable: x.review_choice
    	is: stage_clone
  - note: |
      Legal Actions:
      % if len(x.objectlinks['legalObjects'].aid_list) > 0:
      % for toh in x.objectlinks['legalObjects'].name_list:
   
      - ${ toh }
   
      % endfor
      % else:
      None.
   
      % endif
    hide if: 
      variable: x.review_choice
      is: legal_action
  - Go To Legal Action: x.legal_action_a_id
    datatype: radio
    code: x.objectlinks['legalObjects'].question_code
    show if:
    	variable: x.review_choice
    	is: legal_action
  - note: |
      Steps:
      
      % for step in x.objectlinks['steps']:
      % if step.complete:
      ${ step.name }
      % endif
      % endfor
---
if: defined('x.type_of_clone')
generic object: DAObject
code: |
	x.review_choice_code = list()
	if len(x.clones['TypeOfHousing']) > 0:
    x.review_choice_code.append(['housing_clone','Navigate to a Type of Housing Clone',True])
  if len(x.objectlinks['subsets']) > 0:
    if len(x.clones['TypeOfHousing']) > 0:
      x.review_choice_code.append(['subset','Navigate to a Subset'])
    else:
      x.review_choice_code.append(['subset','Navigate to a Subset',True])
  if len(x.clones['Stage']) > 0:
    if len(x.clones['TypeOfHousing']) > 0 or len(x.objectlinks['subsets']) > 0:
      x.review_choice_code.append(['stage_clone','Navigate to a Stage Clone'])
    else:
      x.review_choice_code.append(['stage_clone','Navigate to a Stage Clone',True])
  if len(x.objectlinks['legalObjects']) > 0:
    x.review_choice_code.append(['legal_action','Navigate to a Legal Action'])
  x.review_choice_code.append(['edit','Edit this'])
  x.review_choice_code.append(['return','Return to Main Menu'])
